<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.0.xsd">
        
    <!-- pulls values from the database.properties file and used in the hibernate configuration -->
    <bean id="databaseConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="location">
            <value>classpath:database.properties</value>
        </property>
    </bean>	
        
    <import resource="classpath*:/META-INF/spring/domainApplicationContext.xml" />
    <import resource="classpath*:/META-INF/spring/daoApplicationContext.xml" />
    <import resource="classpath*:/META-INF/spring/controllerApplicationContext.xml" />
                
    <!-- pulls values from the site-config.properties file and used in building the database for site specific requirements -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="location">
            <value>classpath:location-levels.properties</value>
        </property>
    </bean>   
                           
    <bean id="authSuccessHandler" parent="baseTransactionBean">
    	<property name="target">
			<bean class="org.openhds.web.security.AuthenticationSuccessHandler">
				<constructor-arg ref="userDao" />
			</bean>
   		</property>
	 </bean>

    <bean id="logoutSuccessHandler" parent="baseTransactionBean">
    	<property name="target">
			<bean class="org.openhds.web.security.LogoutSuccessHandler">
				<constructor-arg ref="userDao" />
			</bean>
   		</property>
	</bean>
	
	    <!-- annotation-driven configuration -->
    <context:component-scan base-package="org.openhds" />
	
	<bean id="prefLocale" class="org.openhds.web.util.Locale" >
        <property name="locale" value="English" />
    </bean>
				
	<!-- Configure Spring Security -->
    <security:http auto-config="true">
        <security:form-login authentication-success-handler-ref="authSuccessHandler" login-page="/login.faces" login-processing-url="/loginProcess" authentication-failure-url="/login.faces?login_error=1" />
        <security:intercept-url pattern="/login.faces" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/resources/images/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/resources/css/main.css" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/resources/css/login.css" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/logout.faces" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/api/rest/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/openFacesResources/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/primefaces_resource/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <security:intercept-url pattern="/module/dsl/binding-def/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/module/dsl/validation" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <security:intercept-url pattern="/**" access="ROLE_AUTHENTICATED" />
        <security:intercept-url pattern="/webservice/ddiGenerator" access="ROLE_AUTHENTICATED"/>
        <security:logout logout-url="/logoutProcess" success-handler-ref="logoutSuccessHandler"/>
    </security:http>
    
    <bean id="calendarConverter" class="org.openhds.web.cvt.CalendarConverter">
        <property name="dateFormat" value="#{siteProperties.dateFormat}" />
    </bean>
    
    <!-- Autocomplete converters -->
    <bean id="fieldWorkerExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="fieldWorkerDao" />
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <constructor-arg value="extId" />
    </bean>
    
    <bean id="individualExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="individualDao" />
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <constructor-arg value="extId" />
    </bean>
        
    <bean id="locationExtIdConverter" class="org.openhds.web.cvt.EntityPropertyConverterImpl">
        <constructor-arg ref="locationDao" />
        <constructor-arg value="org.openhds.domain.model.Location" />
        <constructor-arg value="extId" />
    </bean>
    
    <bean id="locationHierarchyExtIdConverter" class="org.openhds.web.cvt.LocationHierarchyConverter">
        <property name="genericDao" ref="genericDao" />
    </bean>
    
    <bean id="optionalIndividualExtIdConverter" class="org.openhds.web.cvt.OptionalEntityPropertyConverterImpl">
        <constructor-arg ref="individualDao" />
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <constructor-arg value="extId" />
    </bean>
	
	<!-- Entity Converters -->
	<bean id="fieldWorkerConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="fieldWorkerDao" />
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="individualConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="individualDao" />
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="locationConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="locationDao" />
        <constructor-arg value="org.openhds.domain.model.Location" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="locationHierarchyConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="locationHierarchyDao" />
        <constructor-arg value="org.openhds.domain.model.LocationHierarchy" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="noteConverter" class="org.openhds.web.cvt.EntityConverterImpl">
    	<constructor-arg ref="noteDao" />
    	<constructor-arg value="org.openhds.domain.model.Note" />
    	<constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="userConverter" class="org.openhds.web.cvt.EntityConverterImpl">
        <constructor-arg ref="userDao" />
        <constructor-arg value="org.openhds.domain.model.User" />
        <constructor-arg value="java.lang.String" />
    </bean>
    
    <bean id="navController" class="org.openhds.web.ui.NavigationMenuBean" />
    <bean id="jsfService" class="org.openhds.web.service.impl.JsfServiceImpl" />
    <bean id="webFlowService" class="org.openhds.web.service.impl.WebFlowServiceImpl" />
    
    <bean id="entityService" parent="baseTransactionBean">
    	<property name="target">
			<bean class="org.openhds.controller.service.impl.EntityServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="currentUser" />
		        <constructor-arg ref="calendarUtil" />
		        <constructor-arg ref="siteProperties" />
		        <constructor-arg ref="entityValidator" />
	        </bean>
        </property>
    </bean> 
    
    <bean id="entityValidator" class="org.openhds.web.service.impl.EntityValidationServiceImpl">
    	<constructor-arg ref="siteProperties" />
    	<constructor-arg ref="jsfService" />
    </bean>
        
    <bean id="userService" parent="baseServiceBean">
    	<property name="target">    
		    <bean class="org.openhds.web.service.impl.UserServiceImpl">
		    	<constructor-arg name="genericDao" ref="genericDao" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="baseCrud" class="org.openhds.web.crud.EntityCrudImpl" scope="session" abstract="true">
        <property name="jsfService" ref="jsfService" />
        <property name="webFlowService" ref="webFlowService" />
        <property name="entityService" ref="entityService" />
        <property name="genericDao" ref="genericDao" />
        <property name="navMenuBean" ref="navController" />
        <property name="properties" ref="siteProperties" />
        <property name="entityValidationService" ref="entityValidator" />
    </bean>
    
    <bean id="fieldWorkerCrud" parent="baseCrud" class="org.openhds.web.crud.impl.FieldWorkerCrudImpl">
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <property name="dao" ref="fieldWorkerDao" />
        <property name="converter" ref="fieldWorkerConverter" />
        <property name="service" ref="fieldWorkerService" />
    </bean>
    
    <bean id="individualCrud" parent="baseCrud" class="org.openhds.web.crud.impl.IndividualCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <property name="dao" ref="individualDao" />
        <property name="converter" ref="individualConverter" />
        <property name="entityValidator" ref="entityValidator" />
        <property name="service" ref="individualService"></property>
    </bean>
    
    <bean id="locationCrud" parent="baseCrud" class="org.openhds.web.crud.impl.LocationCrudImpl">
        <constructor-arg value="org.openhds.domain.model.Location" />
        <property name="dao" ref="locationDao" />
        <property name="converter" ref="locationConverter" />
        <property name="siteProperties" ref="siteProperties" />
        <property name="service" ref="locationHierarchyService" />
    </bean>
    
    <bean id="locationHierarchyCrud" parent="baseCrud" class="org.openhds.web.crud.impl.LocationHierarchyCrudImpl">
        <constructor-arg value="org.openhds.domain.model.LocationHierarchy" />
        <property name="dao" ref="locationHierarchyDao" />
        <property name="converter" ref="locationHierarchyConverter" />
        <property name="service" ref="locationHierarchyService" />
    </bean>
    
    <bean id="noteCrud" parent="baseCrud" class="org.openhds.web.crud.impl.EntityCrudImpl">
    	<constructor-arg value="org.openhds.domain.model.Note" />
    	<property name="dao" ref="noteDao" />
    	<property name="converter" ref="noteConverter" />
    </bean>
    
    <bean id="userCrud" parent="baseCrud" class="org.openhds.web.crud.impl.UserCrudImpl">
        <constructor-arg value="org.openhds.model.User" />
        <property name="dao" ref="userDao" />
        <property name="converter" ref="userConverter" />
        <property name="service" ref="userService" />
    </bean>
    
    <bean id="databaseConfig" class="org.openhds.web.beans.DatabaseConfigBean">
	 	<property name="dbDriver" value="${dbDriver}"/>
		<property name="dbUrl" value="${dbUrl}"/>
		<property name="dbUsername" value="${dbUser}"/>
		<property name="dbPassword" value="${dbPass}"/>
		<property name="dbDialect" value="${hibernateDialect}"/>
		<property name="jsfService" ref="jsfService" />
	</bean>
	
	<bean id="locationLevelConfig" class="org.openhds.web.beans.LocationLevelConfigBean">
		<property name="jsfService" ref="jsfService" />
		<property name="level1"><value>${locationHierarchyLevel1}</value></property>
		<property name="level2"><value>${locationHierarchyLevel2}</value></property>
		<property name="level3"><value>${locationHierarchyLevel3}</value></property>
		<property name="level4"><value>${locationHierarchyLevel4}</value></property>
		<property name="level5"><value>${locationHierarchyLevel5}</value></property>
		<property name="level6"><value>${locationHierarchyLevel6}</value></property>
		<property name="level7"><value>${locationHierarchyLevel7}</value></property>
		<property name="level8"><value>${locationHierarchyLevel8}</value></property>
		<property name="level9"><value>${locationHierarchyLevel9}</value></property>
	</bean>
	
   
</beans>
